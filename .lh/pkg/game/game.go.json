{
    "sourceFile": "pkg/game/game.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1711370522972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711370528317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,3 @@\n package game\n \n+type Game\n"
                },
                {
                    "date": 1711370534204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,5 @@\n package game\n \n-type Game\n+type Game struct {\n+\t\n+}\n"
                },
                {
                    "date": 1711370617601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n package game\n \n type Game struct {\n+\tmaze []string\n \t\n }\n"
                },
                {
                    "date": 1711370635789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n package game\n \n type Game struct {\n \tmaze []string\n-\t\n }\n+\n+// NewGame\n"
                },
                {
                    "date": 1711370645927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,8 @@\n \tmaze []string\n }\n \n // NewGame\n+func NewGame() *Game {\n+\t\n+\treturn &Game{}\n+}\n"
                },
                {
                    "date": 1711370651067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,8 @@\n }\n \n // NewGame\n func NewGame() *Game {\n-\t\n \treturn &Game{}\n }\n+\n+\n"
                },
                {
                    "date": 1711371070288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n package game\n \n type Game struct {\n-\tmaze []string\n+\tMaze []string\n }\n \n // NewGame\n func NewGame() *Game {\n"
                },
                {
                    "date": 1711455174955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,5 +8,14 @@\n func NewGame() *Game {\n \treturn &Game{}\n }\n \n+// Error messages\n+type GameError string\n \n+const (\n+\tErrNotFile = GameError(\"not a file\")\n+)\n+\n+func (e GameError) Error() string {\n+\treturn string(e)\n+}\n"
                },
                {
                    "date": 1711455182838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,11 @@\n // NewGame\n func NewGame() *Game {\n \treturn &Game{}\n }\n-\n+// ===============\n // Error messages\n+// ===============\n type GameError string\n \n const (\n \tErrNotFile = GameError(\"not a file\")\n"
                },
                {
                    "date": 1711455233217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,16 @@\n // NewGame\n func NewGame() *Game {\n \treturn &Game{}\n }\n+\n // ===============\n // Error messages\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = GameError(\"not a file\")\n+\tErrNotFile = GameError(\"could not a file\")\n )\n \n func (e GameError) Error() string {\n \treturn string(e)\n"
                },
                {
                    "date": 1711455247971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = GameError(\"could not a file\")\n+\tErrNotFile = GameError(\"could find not a % file\")\n )\n \n func (e GameError) Error() string {\n \treturn string(e)\n"
                },
                {
                    "date": 1711455254273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = GameError(\"could find not a % file\")\n+\tErrNotFile = GameError(\"could find not a file\")\n )\n \n func (e GameError) Error() string {\n \treturn string(e)\n"
                },
                {
                    "date": 1711455261958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,7 +17,7 @@\n const (\n \tErrNotFile = GameError(\"could find not a file\")\n )\n \n-func (e GameError) Error() string {\n+func (e GameError) Errorf() string {\n \treturn string(e)\n }\n"
                },
                {
                    "date": 1711455880633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = GameError(\"could find not a file\")\n+\tErrNotFile = \"could find not a file\"\n )\n \n-func (e GameError) Errorf() string {\n+func (e GameError) Error() string {\n \treturn string(e)\n }\n"
                },
                {
                    "date": 1711455886979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = \"could find not a file\"\n+\tErrNotFile = GameError(\"could find not a file\")\n )\n \n-func (e GameError) Error() string {\n+func (e *GameError) Error() string {\n \treturn string(e)\n }\n"
                },
                {
                    "date": 1711455894604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,6 @@\n \tErrNotFile = GameError(\"could find not a file\")\n )\n \n func (e *GameError) Error() string {\n-\treturn string(e)\n+\treturn string(&e)\n }\n"
                },
                {
                    "date": 1711455907399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,6 +18,6 @@\n \tErrNotFile = GameError(\"could find not a file\")\n )\n \n func (e *GameError) Error() string {\n-\treturn string(&e)\n+\treturn string(e)\n }\n"
                },
                {
                    "date": 1711455913242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,7 @@\n // ===============\n type GameError string\n \n const (\n-\tErrNotFile = GameError(\"could find not a file\")\n+\tErrNotFile = \"could find not a file\"\n )\n \n-func (e *GameError) Error() string {\n-\treturn string(e)\n-}\n"
                },
                {
                    "date": 1711455954486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,7 @@\n \n // ===============\n // Error messages\n // ===============\n-type GameError string\n-\n const (\n \tErrNotFile = \"could find not a file\"\n )\n-\n"
                },
                {
                    "date": 1711455960327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,14 @@\n package game\n \n+\n+\n+\n+\n type Game struct {\n \tMaze []string\n }\n \n // NewGame\n func NewGame() *Game {\n \treturn &Game{}\n }\n-\n-// ===============\n-// Error messages\n-// ===============\n-const (\n-\tErrNotFile = \"could find not a file\"\n-)\n"
                },
                {
                    "date": 1711455966243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n package game\n \n+// ===============\n+// Error messages\n+// ===============\n+const (\n+\tErrNotFile = \"could find not a file\"\n+)\n \n-\n-\n-\n type Game struct {\n \tMaze []string\n }\n \n"
                },
                {
                    "date": 1711456018052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,6 @@\n package game\n \n-// ===============\n-// Error messages\n-// ===============\n-const (\n-\tErrNotFile = \"could find not a file\"\n-)\n \n type Game struct {\n \tMaze []string\n }\n"
                },
                {
                    "date": 1711456023622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,4 +8,11 @@\n // NewGame\n func NewGame() *Game {\n \treturn &Game{}\n }\n+\n+// ===============\n+// Error messages\n+// ===============\n+var (\n+\tErrNotFile = \"could find not a file\"\n+)\n"
                },
                {
                    "date": 1711456034476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n package game\n \n-\n type Game struct {\n \tMaze []string\n }\n \n@@ -13,6 +12,6 @@\n // ===============\n // Error messages\n // ===============\n var (\n-\tErrNotFile = \"could find not a file\"\n+\tErrNotFile = error.New(\"could find not a file\")\n )\n"
                },
                {
                    "date": 1711456040585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n package game\n \n+import \"errors\"\n+\n type Game struct {\n \tMaze []string\n }\n \n@@ -12,6 +14,6 @@\n // ===============\n // Error messages\n // ===============\n var (\n-\tErrNotFile = error.New(\"could find not a file\")\n+\tErrNotFile = errors.New(\"could find not a file\")\n )\n"
                },
                {
                    "date": 1711456079500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,7 +13,7 @@\n \n // ===============\n // Error messages\n // ===============\n-var (\n+var\n \tErrNotFile = errors.New(\"could find not a file\")\n-)\n+\n"
                },
                {
                    "date": 1711545310307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,12 @@\n package game\n \n-import \"errors\"\n+import (\n+\t\"errors\"\n+\t\"log\"\n+\t\"os\"\n+\t\"os/exec\"\n+)\n \n type Game struct {\n \tMaze []string\n }\n@@ -13,7 +18,29 @@\n \n // ===============\n // Error messages\n // ===============\n-var\n-\tErrNotFile = errors.New(\"could find not a file\")\n+var ErrNotFile = errors.New(\"could find not a file\")\n \n+\n+// initialize game\n+func (g *Game)InitialiseGame() {\n+\t// Check if the terminal supports cbreak mode\n+\tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n+\tcbTerm.Stdin = os.Stdin\n+\n+\terr := cbTerm.Run()\n+\tif err != nil {\n+\t\tlog.Fatalln(\"unable to activate cbreak mode:\", err)\n+\t}\n+}\n+\n+// restore terminal to cooked mode\n+func (g *Game)CleanupGame() {\n+\tcookedTerm := exec.Command(\"stty\", \"-cbreak\", \"echo\")\n+\tcookedTerm.Stdin = os.Stdin\n+\n+\terr := cookedTerm.Run()\n+\tif err != nil {\n+\t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n+\t}\n+}\n"
                },
                {
                    "date": 1711546242506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n )\n \n type Game struct {\n \tMaze []string\n+\t\n }\n \n // NewGame\n func NewGame() *Game {\n"
                },
                {
                    "date": 1711546249218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n )\n \n type Game struct {\n \tMaze []string\n-\t\n+\tplayer p\n }\n \n // NewGame\n func NewGame() *Game {\n"
                },
                {
                    "date": 1711546254572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,15 @@\n \t\"errors\"\n \t\"log\"\n \t\"os\"\n \t\"os/exec\"\n+\n+\t\"github.com/FeiNiaoBF/Pac_Go/pkg/players\"\n )\n \n type Game struct {\n \tMaze []string\n-\tplayer p\n+\tplayer players.Player\n }\n \n // NewGame\n func NewGame() *Game {\n"
                },
                {
                    "date": 1711546267606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \t\"github.com/FeiNiaoBF/Pac_Go/pkg/players\"\n )\n \n type Game struct {\n-\tMaze []string\n+\tMaze   []string\n \tplayer players.Player\n }\n \n // NewGame\n@@ -23,11 +23,10 @@\n // Error messages\n // ===============\n var ErrNotFile = errors.New(\"could find not a file\")\n \n-\n // initialize game\n-func (g *Game)InitialiseGame() {\n+func (g *Game) InitialiseGame() {\n \t// Check if the terminal supports cbreak mode\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n \n@@ -37,13 +36,15 @@\n \t}\n }\n \n // restore terminal to cooked mode\n-func (g *Game)CleanupGame() {\n+func (g *Game) CleanupGame() {\n \tcookedTerm := exec.Command(\"stty\", \"-cbreak\", \"echo\")\n \tcookedTerm.Stdin = os.Stdin\n \n \terr := cookedTerm.Run()\n \tif err != nil {\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n+\n+\n"
                },
                {
                    "date": 1711546273644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,5 +46,5 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-\n+func Addp\n"
                },
                {
                    "date": 1711546279422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,5 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func Addp\n+func Addplayer() {\n+\t\n+}\n"
                },
                {
                    "date": 1711546287040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,7 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func Addplayer() {\n-\t\n+func (g *Game() {\n+\n }\n"
                },
                {
                    "date": 1711546294103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,7 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func (g *Game() {\n-\n+func (g *Game) Addplayer() {\n+\t\n }\n"
                },
                {
                    "date": 1711546303215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,7 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func (g *Game) Addplayer() {\n-\t\n+func (g *Game) AddPlayer() {\n+\n }\n"
                },
                {
                    "date": 1711546328762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,7 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func (g *Game) AddPlayer() {\n+func (g *Game) AddPlayer(p p) {\n \n }\n"
                },
                {
                    "date": 1711546334731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,7 +46,7 @@\n \t\tlog.Fatalln(\"unable to restore cooked mode:\", err)\n \t}\n }\n \n-func (g *Game) AddPlayer(p p) {\n-\n+func (g *Game) AddPlayer(p players.Player) {\n+\t\n }\n"
                },
                {
                    "date": 1711546345401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,6 +47,6 @@\n \t}\n }\n \n func (g *Game) AddPlayer(p players.Player) {\n-\t\n+\tg.player = p\n }\n"
                },
                {
                    "date": 1711546391445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \t\"log\"\n \t\"os\"\n \t\"os/exec\"\n \n-\t\"github.com/FeiNiaoBF/Pac_Go/pkg/players\"\n+\t\n )\n \n type Game struct {\n \tMaze   []string\n"
                },
                {
                    "date": 1711546429120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,13 @@\n \t\"log\"\n \t\"os\"\n \t\"os/exec\"\n \n-\t\n+\n )\n \n type Game struct {\n \tMaze   []string\n-\tplayer players.Player\n }\n \n // NewGame\n func NewGame() *Game {\n"
                }
            ],
            "date": 1711370522972,
            "name": "Commit-0",
            "content": "package game\n\n"
        }
    ]
}