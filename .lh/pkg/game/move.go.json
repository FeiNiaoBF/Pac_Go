{
    "sourceFile": "pkg/game/move.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1711457336959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711457366595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,3 @@\n package game\n \n+func \n"
                },
                {
                    "date": 1711457374617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n package game\n \n-func \n+func initialise\n"
                },
                {
                    "date": 1711457393651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,6 @@\n package game\n \n-func initialise\n+func initialiseGame() {\n+\t// initialize game\n+\t\n+}\n"
                },
                {
                    "date": 1711457400657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n package game\n \n func initialiseGame() {\n \t// initialize game\n-\t\n+\tcbTer\n }\n"
                },
                {
                    "date": 1711457408451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n package game\n \n+import \"os/exec\"\n+\n func initialiseGame() {\n \t// initialize game\n-\tcbTer\n+\tcbTerm := exec.Co\n }\n"
                },
                {
                    "date": 1711457415106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,6 @@\n import \"os/exec\"\n \n func initialiseGame() {\n \t// initialize game\n-\tcbTerm := exec.Co\n+\tcbTerm := exec.Command(\"stty\")\n }\n"
                },
                {
                    "date": 1711457420365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,7 @@\n import \"os/exec\"\n \n func initialiseGame() {\n \t// initialize game\n-\tcbTerm := exec.Command(\"stty\")\n+\tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n+\t\n }\n"
                },
                {
                    "date": 1711457428955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,6 +4,6 @@\n \n func initialiseGame() {\n \t// initialize game\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n-\t\n+\tcbTerm.Stdin = os.Stdin\n }\n"
                },
                {
                    "date": 1711457445634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n package game\n \n-import \"os/exec\"\n+import (\n+\t\"os\"\n+\t\"os/exec\"\n+)\n \n func initialiseGame() {\n \t// initialize game\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n+\t\n }\n"
                },
                {
                    "date": 1711457457172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,6 +8,7 @@\n func initialiseGame() {\n \t// initialize game\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n-\t\n+\n+\terr := cbTerm.Run\n }\n"
                },
                {
                    "date": 1711457464161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,6 +9,7 @@\n \t// initialize game\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n \n-\terr := cbTerm.Run\n+\terr := cbTerm.Run()\n+\t\n }\n"
                },
                {
                    "date": 1711457470870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n package game\n \n import (\n+\t\"log\"\n \t\"os\"\n \t\"os/exec\"\n )\n \n@@ -10,6 +11,7 @@\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n \n \terr := cbTerm.Run()\n-\t\n+\tif err != nil {\n+\t\tlog.\n }\n"
                },
                {
                    "date": 1711457476350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,6 +12,6 @@\n \tcbTerm.Stdin = os.Stdin\n \n \terr := cbTerm.Run()\n \tif err != nil {\n-\t\tlog.\n+\t\tlog.Fatalln()\n }\n"
                },
                {
                    "date": 1711457483708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,6 +12,6 @@\n \tcbTerm.Stdin = os.Stdin\n \n \terr := cbTerm.Run()\n \tif err != nil {\n-\t\tlog.Fatalln()\n+\t\tlog.Fatalln(\"unable to activate cbreak mode:\", err\")\n }\n"
                },
                {
                    "date": 1711457506526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,13 @@\n )\n \n func initialiseGame() {\n \t// initialize game\n+\t// \n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n \n \terr := cbTerm.Run()\n \tif err != nil {\n-\t\tlog.Fatalln(\"unable to activate cbreak mode:\", err\")\n+\t\tlog.Fatalln(\"unable to activate cbreak mode:\", err)\n+\t}\n }\n"
                },
                {
                    "date": 1711457514761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n )\n \n func initialiseGame() {\n \t// initialize game\n-\t// \n+\t// Check if the terminal supports cbreak mode\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n \tcbTerm.Stdin = os.Stdin\n \n \terr := cbTerm.Run()\n"
                },
                {
                    "date": 1711457585343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,4 +16,5 @@\n \tif err != nil {\n \t\tlog.Fatalln(\"unable to activate cbreak mode:\", err)\n \t}\n }\n+\n"
                },
                {
                    "date": 1711457592107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \t\"os\"\n \t\"os/exec\"\n )\n \n-/// initialize game\n+// initialize game\n func initialiseGame() {\n \n \t// Check if the terminal supports cbreak mode\n \tcbTerm := exec.Command(\"stty\", \"cbreak\", \"-echo\")\n"
                },
                {
                    "date": 1711457653229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,6 +20,6 @@\n }\n \n // restore terminal to cooked mode\n func cleanupGame() {\n-\tcookedTerm := exec\n+\tcookedTerm := exec.\n }\n"
                }
            ],
            "date": 1711457336959,
            "name": "Commit-0",
            "content": "package game\n\n"
        }
    ]
}